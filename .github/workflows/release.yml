run-name: "Building release ${{ github.ref }}"

on:
  release:
    types:
      - created
      - edited

jobs:
  release:
    name: Add Assets
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Toolchain Rename
        run: cp --preserve target/${{ matrix.target }}/release/jfswatch target/${{ matrix.target }}/release/jfswatch_${{ matrix.target }}

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          files: target/${{ matrix.target }}/release/jfswatch_${{ matrix.target }}

  mark-released:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Get Release Information
        id: release
        run: echo "::set-output name=release_id::${{ github.event.release.id }}"

      - name: Mark Pre-release as Released
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_ID: ${{ steps.release.outputs.release_id }}
        run: |
          curl -X PATCH \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token $GITHUB_TOKEN" \
          https://api.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }} \
          -d '{"prerelease": false}'
